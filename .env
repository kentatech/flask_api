#creating this file to ignore the .env file
# .env file contains sensitive information like database credentials and secret keys    
# which should not be exposed in version control systems like Git.
# Add the following line to your .gitignore file to ignore the .env file:
.env    

#Also ignore the virtual environment folder if you have one
.venv/
#This ensures that your local environment settings remain private and secure.
#Additionally, you might want to ignore other files or directories that contain sensitive information or are not necessary for version control.
#For example, you might want to ignore configuration files or compiled bytecode files.
#Here are some additional examples of files you might want to ignore:
.configs/base_config.py
__pycache__/  
#Compiled Python files
#These files are generated automatically and do not need to be tracked in version control.
#Make sure to adjust the .gitignore file according to your project's specific needs and structure.
#For example, if you have a different virtual environment folder name, replace .venv/ with the appropriate name.
#If you have any other sensitive files or directories, add them to the .gitignore file as well.
#Remember to commit the updated .gitignore file to your repository to ensure that the specified files are ignored in future commits.
#Also, if you have already committed the .env file or any other sensitive files to your repository, you should remove them from the repository's history to ensure they are no longer accessible.
#You can use tools like BFG Repo-Cleaner or git filter-branch to remove sensitive files from your Git history.      